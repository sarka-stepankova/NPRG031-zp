<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAACFISPqcvtD6OctNqLs968+w+G4lUAADs=
</value>
  </data>
</root>